


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    2 00000000         
    3 00000000                 GLOBAL           f_asm
    4 00000000                 EXTERN           image
    5 00000000         
    6 00000000                 THUMB
    7 00000000         f_asm
    8 00000000         
    9 00000000         ;mov r0,#0xaa00
   10 00000000         ;mov r1,#0xbb
   11 00000000         ;orrs r1,r0
   12 00000000         
   13 00000000         ;ldr r0,=matriz
   14 00000000         ;ldrb r2,[r0,#0]
   15 00000000         ;ldrb r2,[r0,#6]
   16 00000000         
   17 00000000         ;r0 <= direcao que vai andar
   18 00000000         ;r1 <= ponteiro da memoria
   19 00000000         ;r2 <= recebe da memoria pixel q ira sobrescrever
   20 00000000         ;r3 <= salva o dado que sera sobrescrito
   21 00000000         ;r4 <= contador de pixels deslocados
   22 00000000         ;r5 <= conta pra que mova 3 vezes na memoria (RGB)
   23 00000000         ;r6 <= conta o numero de iteracoes de linhas ou colunas 
                       feitas
   24 00000000         ;r7 <= guarda o endereco inicial da imagem
   25 00000000         
   26 00000000         ;dir 0 <= direita, dir 1 <= baixo, dir 2 = esquerda, dir
                        3 <= cima
   27 00000000         
   28 00000000 460F            mov              r7, r1
   29 00000002 780A            ldrb             r2,[r1]
   30 00000004 780B            ldrb             r3,[r1]
   31 00000006 F04F 0400       mov              r4,#0
   32 0000000A 2800            cmp              r0, #0
   33 0000000C D005            BEQ              direita
   34 0000000E 2801            cmp              r0, #1
   35 00000010 D023            BEQ              baixo
   36 00000012 2802            cmp              r0, #2
   37 00000014 D022            BEQ              esquerda
   38 00000016 2803            cmp              r0, #3
   39 00000018 D048            BEQ              cima
   40 0000001A         
   41 0000001A         direita
   42 0000001A 4688            mov              r8,r1
   43 0000001C F04F 095F       mov              r9,#95
   44 00000020 F04F 0600       mov              r6,#0
   45 00000024 F04F 0500       mov              r5,#0
   46 00000028         loopD
   47 00000028 F818 3F08       ldrb             r3,[r8,#8]!
   48 0000002C F888 2000       strb             r2,[r8]
   49 00000030 461A            mov              r2,r3
   50 00000032 F104 0401       add              r4,r4,#1
   51 00000036 454C            cmp              r4,r9
   52 00000038 D1F6            bne              loopD
   53 0000003A F04F 0400       mov              r4,#0
   54 0000003E 700A            strb             r2,[r1]
   55 00000040 4641            mov              r1,r8
   56 00000042 F106 0601       add              r6,r6,#1



ARM Macro Assembler    Page 2 


   57 00000046 2E40            cmp              r6,#64
   58 00000048 D1EE            bne              loopD
   59 0000004A F105 0501       add              r5,r5,#1
   60 0000004E 46B8            mov              r8,r7
   61 00000050 F04F 0600       mov              r6,#0
   62 00000054 2D03            cmp              r5,#3
   63 00000056 D02A            beq              retorno
   64 00000058 D1E6            bne              loopD
   65 0000005A         
   66 0000005A         baixo
   67 0000005A E028            b                retorno
   68 0000005C         
   69 0000005C         esquerda
   70 0000005C F44F 4990       mov              r9,#18432   ; ultima pos de mem
                                                            oria
   71 00000060 EB07 0809       add              r8,r7,r9
   72 00000064 F240 191F       mov              r9,#287
   73 00000068 4641            mov              r1,r8
   74 0000006A F04F 0600       mov              r6,#0
   75 0000006E F04F 0500       mov              r5,#0
   76 00000072         loopE
   77 00000072 F818 3D08       ldrb             r3,[r8,#-8]!
   78 00000076 F888 2000       strb             r2,[r8]
   79 0000007A 461A            mov              r2,r3
   80 0000007C F104 0401       add              r4,r4,#1
   81 00000080 454C            cmp              r4,r9
   82 00000082 D1F6            bne              loopE
   83 00000084 700A            strb             r2,[r1]
   84 00000086 4641            mov              r1,r8
   85 00000088 F106 0601       add              r6,r6,#1
   86 0000008C 2E40            cmp              r6,#64
   87 0000008E D1F0            bne              loopE
   88 00000090 F105 0501       add              r5,r5,#1
   89 00000094 F44F 4990       mov              r9,#18432   ; ultima pos de mem
                                                            oria
   90 00000098 EB07 0809       add              r8,r7,r9
   91 0000009C F240 191F       mov              r9,#287
   92 000000A0 4641            mov              r1,r8
   93 000000A2 F04F 0600       mov              r6,#0
   94 000000A6 2D03            cmp              r5,#3
   95 000000A8 D001            beq              retorno
   96 000000AA D1E2            bne              loopE
   97 000000AC         
   98 000000AC         cima
   99 000000AC E7FF            b                retorno
  100 000000AE         
  101 000000AE         
  102 000000AE         retorno
  103 000000AE 4770            bx               lr
  104 000000B0         
  105 000000B0                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\flash\__exemploc_asm.d -o.\flash\__exemploc_asm.o -I.\RTE\_TM
4C129_Flash -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_
v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\RTOS\RTX\INC -IC:\Keil_v5\ARM\PACK\Keil\TM4C_
DFP\1.1.0\Device\Include\TM4C129 --predefine="__RTX SETA 1" --predefine="__UVIS
ION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --predefine="TM4C1294NCPDT SET
A 1" --list=.\flash\__exemploc_asm.lst __ExemploC_ASM.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 1 in file __ExemploC_ASM.s
   Uses
      None
Comment: .text unused
baixo 0000005A

Symbol: baixo
   Definitions
      At line 66 in file __ExemploC_ASM.s
   Uses
      At line 35 in file __ExemploC_ASM.s
Comment: baixo used once
cima 000000AC

Symbol: cima
   Definitions
      At line 98 in file __ExemploC_ASM.s
   Uses
      At line 39 in file __ExemploC_ASM.s
Comment: cima used once
direita 0000001A

Symbol: direita
   Definitions
      At line 41 in file __ExemploC_ASM.s
   Uses
      At line 33 in file __ExemploC_ASM.s
Comment: direita used once
esquerda 0000005C

Symbol: esquerda
   Definitions
      At line 69 in file __ExemploC_ASM.s
   Uses
      At line 37 in file __ExemploC_ASM.s
Comment: esquerda used once
f_asm 00000000

Symbol: f_asm
   Definitions
      At line 7 in file __ExemploC_ASM.s
   Uses
      At line 3 in file __ExemploC_ASM.s
Comment: f_asm used once
loopD 00000028

Symbol: loopD
   Definitions
      At line 46 in file __ExemploC_ASM.s
   Uses
      At line 52 in file __ExemploC_ASM.s
      At line 58 in file __ExemploC_ASM.s
      At line 64 in file __ExemploC_ASM.s

loopE 00000072



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: loopE
   Definitions
      At line 76 in file __ExemploC_ASM.s
   Uses
      At line 82 in file __ExemploC_ASM.s
      At line 87 in file __ExemploC_ASM.s
      At line 96 in file __ExemploC_ASM.s

retorno 000000AE

Symbol: retorno
   Definitions
      At line 102 in file __ExemploC_ASM.s
   Uses
      At line 63 in file __ExemploC_ASM.s
      At line 67 in file __ExemploC_ASM.s
      At line 95 in file __ExemploC_ASM.s
      At line 99 in file __ExemploC_ASM.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

image 00000000

Symbol: image
   Definitions
      At line 4 in file __ExemploC_ASM.s
   Uses
      None
Comment: image unused
1 symbol
345 symbols in table
