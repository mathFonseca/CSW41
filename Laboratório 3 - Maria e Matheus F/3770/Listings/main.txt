; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\RTE\_Cortex-M3_Simulation -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.6.0\Device\ARM\ARMCM3\Include -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DARMCM3 --omf_browse=.\objects\main.crf main.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;16     
;;;17     int main (void) {
000000  2100              MOVS     r1,#0
;;;18       unsigned int i;
;;;19       unsigned int checksum;
;;;20     
;;;21       // Calculate simple checksums of both binary images to show that the size of the images can be used
;;;22       checksum = 0;
;;;23       for (i = 0; i < MyBinaryImage1_length; i++) {  // the constant MyBinaryImage1_length is calculated in the assembler file MyBinFile1.s
000002  2000              MOVS     r0,#0
000004  e003              B        |L1.14|
                  |L1.6|
;;;24         checksum += MyBinaryImage1[i];
000006  4a0c              LDR      r2,|L1.56|
000008  5c12              LDRB     r2,[r2,r0]
00000a  4411              ADD      r1,r1,r2
00000c  1c40              ADDS     r0,r0,#1              ;23
                  |L1.14|
00000e  4a0b              LDR      r2,|L1.60|
000010  6812              LDR      r2,[r2,#0]            ;23  ; MyBinaryImage1_length
000012  4290              CMP      r0,r2                 ;23
000014  d3f7              BCC      |L1.6|
;;;25       }
;;;26       ChecksumImg1 = checksum;
000016  4a0a              LDR      r2,|L1.64|
000018  6011              STR      r1,[r2,#0]  ; ChecksumImg1
;;;27     
;;;28       checksum = 0;
00001a  2100              MOVS     r1,#0
;;;29       for (i = 0; i < MyBinaryImage2_length; i++) {  // the constant MyBinaryImage2_length is generated by the srec_cat utility
00001c  2000              MOVS     r0,#0
00001e  e003              B        |L1.40|
                  |L1.32|
;;;30         checksum += MyBinaryImage2[i];
000020  4a08              LDR      r2,|L1.68|
000022  5c12              LDRB     r2,[r2,r0]
000024  4411              ADD      r1,r1,r2
000026  1c40              ADDS     r0,r0,#1              ;29
                  |L1.40|
000028  4a07              LDR      r2,|L1.72|
00002a  6812              LDR      r2,[r2,#0]            ;29  ; MyBinaryImage2_length
00002c  4290              CMP      r0,r2                 ;29
00002e  d3f7              BCC      |L1.32|
;;;31       }
;;;32       ChecksumImg2 = checksum;
000030  4a06              LDR      r2,|L1.76|
000032  6011              STR      r1,[r2,#0]  ; ChecksumImg2
;;;33     
;;;34       while(1);    // main never ends in an embedded application
000034  bf00              NOP      
                  |L1.54|
000036  e7fe              B        |L1.54|
;;;35     }
                          ENDP

                  |L1.56|
                          DCD      MyBinaryImage1
                  |L1.60|
                          DCD      MyBinaryImage1_length
                  |L1.64|
                          DCD      ChecksumImg1
                  |L1.68|
                          DCD      MyBinaryImage2
                  |L1.72|
                          DCD      MyBinaryImage2_length
                  |L1.76|
                          DCD      ChecksumImg2

                          AREA ||.data||, DATA, ALIGN=2

                  ChecksumImg1
                          DCD      0x00000000
                  ChecksumImg2
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
